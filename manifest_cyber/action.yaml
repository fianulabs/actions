# Copyright 2023 Fianu Labs, Inc.
# SPDX-License-Identifier: Apache-2.0
name: 'Capture Manifest Cyber Evidence Using the Fianu CLI'
description: |
  This action captures evidence generated by the manifest cyber github action.
inputs:
  fianu-service-account:
    description: |
      The Fianu service account provided to your organization
      to perform keyless signing.
    required: true
  audience:
    description: |
      Specifies the identity token audience to use when creating an
      identity token to authenticate with Fianu.
    required: false
    default: sigstore
  fianu-host:
    description: |
      Fianu host.
    required: true
  fianu-client-id:
    description: |
      Fianu client ID.
    required: true
  fianu-client-secret:
    description: |
      Fianu client secret.
    required: true
  manifest-cyber-sbom-output:
    description: |
      The path to the sbom outputted by the manifest cyber action.
    required: true
  bom-ref-path:
    description: |
      Reference to the bom ref in the JSON output. This defaults to the path for CycloneDX. For SPDX
      the path is `.name`.
    required: false
    default: '.metadata.component["bom-ref"]'
  manifest-cyber-host:
    description: |
      Manifest Cyber host.
    required: false
    default: https://api.manifestcyber.com
runs:
  using: "composite"
  steps:
    # Authentication Google Cloud CLI
    # Reference: https://github.com/google-github-actions/auth
    - name: Google Cloud Authentication Setup
      id: gcloud_auth
      uses: google-github-actions/auth@v2
      with:
        token_format: id_token
        id_token_audience: ${{ inputs.audience }}
        id_token_include_email: true
        workload_identity_provider: 'projects/68661080711/locations/global/workloadIdentityPools/fianu-github-actions/providers/github'
        service_account: ${{ inputs.fianu-service-account }}

    # Google Cloud CLI Installation
    - name: Google Cloud CLI Installation
      id: setup_gcloud
      uses: google-github-actions/setup-gcloud@v2

    # Install Cosign CLI
    # Reference: https://github.com/sigstore/cosign-installer
    - name: Install Cosign
      uses: sigstore/cosign-installer@v3.5.0

    # Extract SBOM Reference from the Manifest Cyber SBOM Output
    - name: Extract SBOM Reference
      id: sbom
      uses: sergeysova/jq-action@v2
      with:
        cmd: jq ${{ inputs.bom-ref-path }} ${{ inputs.manifest-cyber-sbom-output }} -r

    # Sign and Capture SBOM Evidence
    - name: Cosign Sign Blob and Capture SBOM Evidence
      shell: bash
      env:
        FIANU_HOST: ${{ inputs.fianu-host }}
        FIANU_CLIENT_ID: ${{ inputs.fianu-client-id }}
        FIANU_CLIENT_SECRET: ${{ inputs.fianu-client-secret }}
      run: |-
        # Initialize Cosign with the Fianu Mirror and Root
        
        cosign initialize --mirror $FIANU_HOST/ledger/root --root $FIANU_HOST/ledger/root/root.json
        
        # Sign the SBOM with Cosign, generate a Rekor Bundle, and output the Digest
        
        cosign sign-blob ${{ inputs.manifest-cyber-sbom-output }} \
          --bundle bundle.json \
          --rekor-url $FIANU_HOST \
          --identity-token=${{ steps.gcloud_auth.outputs.id_token }} \
          --yes \
          --fulcio-url $FIANU_HOST/ledger/fulcio
        
        # Declare the bom reference as a declaration and display all declarations
        
        fianu declare --path manifest_cyber.sbom --param bom-ref --set ${{ steps.sbom.outputs.value }}
        fianu config declarations
        
        # Capture the Generated Bundle with Fianu
        
        if [ "${{ inputs.bom-ref-path }}" = ".name" ]; then
          format_option="--format spdx-json"
        else
          format_option="--format cyclonedx-json"
        fi
        
        fianu capture evidence --input bundle.json --type blob --source sbom.manifest_cyber --resource-uri ${{ inputs.manifest-cyber-host }} $format_option
