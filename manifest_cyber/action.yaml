# Copyright 2023 Fianu Labs, Inc.
# SPDX-License-Identifier: Apache-2.0

name: 'Capture Manifest Cyber Evidence Using the Fianu CLI'
description: |
  This action captures evidence generated by the manifest cyber github action.

inputs:
  fianu-service-account:
    description: |
      The Fianu service account provided to your organization
      to perform keyless signing.
    required: true

  manifest-cyber-sbom-output:
    description: |
      The path to the sbom outputted by the manifest cyber action.
    required: true

  bom-ref-path:
    description: |
      Reference to the bom ref in the JSON output. This defaults to the path for CycloneDX. For SPDX
      the path is .name
    required: false
    default: .metadata.component."bom-ref"

  audience:
    description: |
      Specifies the identity token audience to use when creating an
      identity token to authenticate with Fianu.
    required: false
    default: sigstore

  fianu-host:
    description: |
      Fianu host.
    required: true

  fianu-client-id:
    description: |
      Fianu client ID.
    required: true

  fianu-client-secret:
    description: |
      Fianu client secret.
    required: true

  manifest-cyber-host:
    description: |
      Manifest Cyber host.
    required: false
    default: https://api.manifestcyber.com

runs:
  using: "composite"

  steps:
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        token_format: id_token
        id_token_audience: ${{ inputs.audience }}
        id_token_include_email: true
        workload_identity_provider: 'projects/68661080711/locations/global/workloadIdentityPools/fianu-github-actions/providers/github'
        service_account: ${{ inputs.fianu-service-account }}

    - name: Install Cosign
      uses: sigstore/cosign-installer@main
      with:
        cosign-release: 'v2.0.0'

    - id: 'sbom'
      name: Extract Sbom Reference
      uses: sergeysova/jq-action@v2
      with:
        cmd: 'jq ${{ inputs.bom-ref-path }} ${{ inputs.manifest-cyber-sbom-output }} -r'

    - name: Capture Evidence
      shell: bash
      env:
        FIANU_HOST: ${{ inputs.fianu-host }}
        FIANU_CLIENT_ID: ${{ inputs.fianu-client-id }}
        FIANU_CLIENT_SECRET: ${{ inputs.fianu-client-secret }}
      run: |-
        fianu root init
        
        cosign sign-blob manifest_cyber.json --bundle bundle.json --rekor-url $FIANU_HOST --identity-token=${{ steps.auth.outputs.id_token }} --yes --fulcio-url $FIANU_HOST/ledger/fulcio
        
        fianu declare --path manifest_cyber.sbom --param bom-ref --set ${{ steps.sbom.outputs.value }}
        fianu config declarations
        
        if [ "${{ inputs.bom-ref-path }}" = ".name" ]; then
          format_option="--format spdx-json"
        else
          format_option="--format cyclonedx-json"
        fi
        
        fianu capture evidence --input bundle.json --type blob --source sbom --resource-uri ${{ inputs.manifest-cyber-host }} --format cyclonedx-json